{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2CACA,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,yBAAKc,UAAU,0CACX,yBAAKA,UAAU,eACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,MCHPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAY,WACRxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAhCa,EADuB,EAC5BN,KAAaa,EADe,EACfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,oCAAoChB,GACjDoB,GAAW,sCACZ,yBAAKJ,UAAU,aAEHH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEZnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,QAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAS9B,OACE,oCACE,4CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CAASA,SAAUA,EACnB2B,IAAK3B,UCnBzB8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5e7a01aa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2)\r\n        {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        //Esto evita que la página se recargue cuando presionamos enter en el formulario\r\n    }\r\n    //El inputvalue es el último valor actualizado de lo que escribimos en input\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>AddCategory</h2>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  };","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=WPi2DaRh7D2sVCVPw61DwRS3dyFVCNnZ`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <div className=\"card-inside\">\r\n                <img src={url} alt={title}/>\r\n                <p>{title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\">{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //Los efectos no pueden ser async\r\n    useEffect ( () => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n    }, [category])\r\n\r\n    return state //{data:[], loading: true};\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from '../components/AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One']);\r\n\r\n    //Hay que conseguir que la función añada un nuevo elemento al array\r\n    /*const handleAdd = () => {\r\n        //Esto nos hace mantener las categorías anteriores y agregar una nueva\r\n        setCategories([...categories, 'HunterXHunter']);\r\n    }*/\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        {/*Con setcategories lo que hago es mandarle la categoría setCategories al componente*/}\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category =>\r\n                    <GifGrid category={category}\r\n                    key={category}/>\r\n                )\r\n            }\r\n        </ol>\r\n      </>\r\n    )\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}